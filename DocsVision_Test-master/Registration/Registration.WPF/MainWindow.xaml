<Window x:Class="Registration.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Registration.WPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="597" Width="1300" WindowStartupLocation="{StaticResource standartWindowStartupLocation}" Style="{StaticResource standartWindow}"
        Initialized="Window_Initialized" MinWidth="600" MinHeight="300">
    <Window.Resources>

    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300*" MinWidth="200"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="400*" MinWidth="400"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="500*" MinWidth="300" />
            <ColumnDefinition Width="0*"/>
        </Grid.ColumnDefinitions>
       
        <ContentPresenter Content="{Binding }" />
        <DataGrid Name="BriefContentLetters" AutoGenerateColumns="False" SelectionMode="Single" Grid.Column="2" Margin="0,20,0,0" ItemsSource="{Binding Letters}" SelectedItem="{Binding SelectedLetter}" IsReadOnly="True" MinWidth="300" MinHeight="300">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Title" Binding="{Binding Path=Name}" Width="100" />
                <DataGridHyperlinkColumn Header="SenderName" Binding="{Binding Path=SenderName}" Width="150" />
                <DataGridTextColumn Header="Date" Binding="{Binding Path=Date}" Width="150" />
            </DataGrid.Columns>
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding Path=OpenLetterViewWindow}" Key="Enter" 
                            CommandParameter="{Binding ElementName=BriefContentLetters, Path=SelectedValue}"/>
            </DataGrid.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction
                           Command="{Binding Path=OpenLetterViewWindow}"
                CommandParameter="{Binding ElementName=BriefContentLetters, Path=SelectedValue}" />
                </i:EventTrigger>
               
                <i:EventTrigger EventName="SelectedCellsChanged">
                    <i:InvokeCommandAction
                           Command="{Binding Path=ShowBriefLetter}"
                CommandParameter="{Binding ElementName=BriefContentLetters, Path=SelectedValue}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        
        <StackPanel x:Name="stackPanel" HorizontalAlignment="Left" Height="529" Margin="8,27,0,0" VerticalAlignment="Top" Width="385">
            <TreeView  x:Name="TV" ItemsSource="{Binding DirItems}" PreviewMouseRightButtonDown="tv_dep_PreviewMouseRightButtonDown" Height="546"  >
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction
                           Command="{Binding SelectedFolderNodeChanged}"
                           CommandParameter="{Binding SelectedItem, ElementName=TV}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Create" Command="{Binding CreateFolder}" />
                        <MenuItem Header="Edit" Command="{Binding EditFolder}"/>
                        <MenuItem Header="Delete" Command="{Binding DeleteFolder}"/>
                    </ContextMenu>
                </TreeView.ContextMenu>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    </Style>
                </TreeView.ItemContainerStyle>

            </TreeView>

        </StackPanel>

        <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3"
        HorizontalAlignment="Center" VerticalAlignment="Stretch" />
        <GridSplitter Grid.Column="3" ShowsPreview="False" Width="3"
        HorizontalAlignment="Center" VerticalAlignment="Stretch" />
        <Menu Height="20"  VerticalAlignment="Top" Grid.ColumnSpan="6" Margin="0,0,-71,0" >
            
            <MenuItem x:Name="X" Header="New Letter" DisplayMemberPath="Name" ItemsSource="{Binding Path=ExistLettersTypes}">
                <MenuItem.Icon>
                    <Image Source="C:\Users\Ivanova.M\Downloads\NewLetter.png"/>
                </MenuItem.Icon>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding DataContext.MakeLetter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>                

            <MenuItem Header="Delete Letter" Command="{Binding Path=DeleteLetterClick}">
                <MenuItem.Icon>
                    <Image Source="C:\Users\Ivanova.M\Downloads\DeleteLetter.png"/>
                </MenuItem.Icon>
            </MenuItem>
            
        </Menu>

        <ContentControl  Grid.Column="4" Content="{Binding Path=LetterPlugin}"/>
        
    </Grid>

</Window>
